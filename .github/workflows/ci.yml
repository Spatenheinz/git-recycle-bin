name: CI

on:
  push:
    branches: [master]
  pull_request:

env:
  NIX_PATH: "nixpkgs=channel:nixos-24.05"

jobs:
  usage:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: cachix/install-nix-action@v25
      - name: Usage help
        run: nix-shell --pure --run "git_recycle_bin.py --help"
      - name: Just list
        run: nix-shell --pure --run "just --list"

  unittest:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: cachix/install-nix-action@v25
      - name: Unit tests
        env:
          TZ: Europe/Copenhagen
        run: nix-shell --pure --run "just unittest"
      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v5
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          slug: ArtifactLabs/git-recycle-bin
          files: coverage.xml

  pip_install:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v4
        with:
          python-version: '3.11'
      - name: Install package
        run: pip install .
      - name: Install test deps
        run: pip install pytest
      - name: Run tests
        run: PYTHONPATH=$PWD:$PWD/src pytest
      - name: CLI help
        run: git_recycle_bin.py --help

  demo_help:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: cachix/install-nix-action@v25
      - name: Demo help
        run: nix-shell --pure --run "just demo0"

  demo_push:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        demo: [demo1, demo1_quiet, demo1_verbose, demo1_vverbose, demo2, demo3, demo4, demo5]
    steps:
      - uses: actions/checkout@v4
      - uses: cachix/install-nix-action@v25
      - name: Demo push
        run: nix-shell --pure --run "just push::${{ matrix.demo }}"

  demo_clean:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        demo: [demo1]
    steps:
      - uses: actions/checkout@v4
      - uses: cachix/install-nix-action@v25
      - name: Demo clean
        run: nix-shell --pure --run "just clean::${{ matrix.demo }}"

  demo_list:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        demo: [demo1, demo2, demo3, demo4]
    steps:
      - uses: actions/checkout@v4
      - uses: cachix/install-nix-action@v25
      - name: Demo list
        run: nix-shell --pure --run "just list::${{ matrix.demo }}"

  demo_download:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        demo: [demo1]
    steps:
      - uses: actions/checkout@v4
      - uses: cachix/install-nix-action@v25
      - name: Demo download
        run: nix-shell --pure --run "just download::${{ matrix.demo }}"

  lint-shell:
    runs-on: ubuntu-latest
    continue-on-error: true
    steps:
      - uses: actions/checkout@v4
      - uses: cachix/install-nix-action@v25
      - name: ShellCheck
        run: nix-shell --pure --run "just lint-shell"

  lint-md:
    runs-on: ubuntu-latest
    continue-on-error: true
    steps:
      - uses: actions/checkout@v4
      - uses: cachix/install-nix-action@v25
      - name: Markdownlint
        run: nix-shell --pure --run "just lint-md"

  docs-lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: cachix/install-nix-action@v25
      - name: Validate docs
        run: nix-shell --pure --run "just docs-lint"

  pages:
    runs-on: ubuntu-latest
    needs: unittest
    if: github.event_name == 'push' && github.ref == 'refs/heads/master'
    permissions:
      contents: read
      pages: write
      id-token: write
    steps:
      - uses: actions/checkout@v4
      - uses: cachix/install-nix-action@v25
      - name: Build docs
        run: nix-shell --pure --run "just docs"
      - uses: actions/configure-pages@v5
      - uses: actions/upload-pages-artifact@v3
        with:
          path: docs/_build/html
      - uses: actions/deploy-pages@v4
